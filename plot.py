# -*- coding: utf-8 -*-
"""
Created on Mon Apr  4 23:06:29 2022

@author: Administrator
"""

import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import numpy as np

def plot_scatter(sc):#此函数为画network-3-26网络图专用
    # 1. 首先是导入包，创建数据
    n = len(sc)
    sc_np = np.array(sc)#list转np
    x = list(range(1,len(sc_np)+1,1))
    y = sc_np[:,1]
    # 2.创建一张figure
    fig = plt.figure(1)
    # 3. 设置颜色 color 值【可选参数，即可填可不填】，方式有几种
    # colors = np.random.rand(n) # 随机产生10个0~1之间的颜色值，或者
    #colors = ['r', 'g', 'y', 'b', 'r', 'c', 'g', 'b', 'k', 'm']  # 可设置随机数取
    colors = ['r', 'b', 'b', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k']  # 可设置随机数取
    # 4. 设置点的面积大小 area 值 【可选参数】
    #area = 20*np.arange(1, n+1)
    area = 70
    # 5. 设置点的边界线宽度 【可选参数】
    #widths = np.arange(n)# 0-9的数字
    widths = 0# 0-9的数字
    # 6. 正式绘制散点图：scatter
    plt.scatter(x, y, s=area, c=colors, linewidths=widths, alpha=1, marker='o')
    # 7. 设置轴标签：xlabel、ylabel
    #设置X轴标签
    plt.xlabel("N",fontsize = 18)
    #设置Y轴标签
    plt.ylabel("sc",fontsize = 18)

    #横坐标以log形式显示
    plt.xscale("log")
    
    #设置坐标轴粗细
    ax = plt.gca()
    ax.spines['bottom'].set_linewidth(2)
    ax.spines['top'].set_linewidth(2)
    ax.spines['left'].set_linewidth(2)
    ax.spines['right'].set_linewidth(2)
    
    #显示具体刻度值
    ax.yaxis.set_major_locator(ticker.FixedLocator([0, 10, 20, 30,40,50,60]))#显示列表
    
    #刻度字体大小
    plt.tick_params(labelsize = 12)
# =============================================================================
#     # 8. 设置图标题：title
#     #plt.title('test绘图函数')
#     # 9. 设置轴的上下限显示值：xlim、ylim
#     # 设置横轴的上下限值
#     plt.xlim(-0.5, 2.5)
#     # 设置纵轴的上下限值
#     plt.ylim(-0.5, 2.5)
#     # 10. 设置轴的刻度值：xticks、yticks
#     # 设置横轴精准刻度
#     plt.xticks(np.arange(np.min(x)-0.2, np.max(x)+0.2, step=0.3))
#     # 设置纵轴精准刻度
#     plt.yticks(np.arange(np.min(y)-0.2, np.max(y)+0.2, step=0.3))
#     # 也可按照xlim和ylim来设置
#     # 设置横轴精准刻度
#     plt.xticks(np.arange(-0.5, 2.5, step=0.5))
#     # 设置纵轴精准刻度
#     plt.yticks(np.arange(-0.5, 2.5, step=0.5))
# =============================================================================
      
    # 11. 在图中某些点上（位置）显示标签：annotate
    # plt.annotate("(" + str(round(x[2], 2)) + ", " + str(round(y[2], 2)) + ")", xy=(x[2], y[2]), fontsize=10, xycoords='data')# 或者
    #plt.annotate("({0},{1})".format(round(x[2],2), round(y[2],2)), xy=(x[2], y[2]), fontsize=10, xycoords='data')
    # xycoords='data' 以data值为基准
    # 设置字体大小为 10
    # 12. 在图中某些位置显示文本：text
    #plt.text(round(x[6],2), round(y[6],2), "good point", fontdict={'size': 10, 'color': 'red'})  # fontdict设置文本字体
    plt.text(1.1, 59, "1", fontdict={'size': 12, 'color': 'red'})  # fontdict设置文本字体
    plt.text(2.2, 24, "8", fontdict={'size': 12, 'color': 'blue'})  # fontdict设置文本字体
    plt.text(3.3, 15, "17", fontdict={'size': 12, 'color': 'blue'})  # fontdict设置文本字体
    # Add text to the axes.
    # 13. 设置显示中文
    #plt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签
    #plt.rcParams['axes.unicode_minus']=False #用来正常显示负号
    # 14. 设置legend，【注意，'绘图测试'：一定要是可迭代格式，例如元组或者列表，要不然只会显示第一个字符，也就是legend会显示不全】
    #plt.legend(['绘图测试'], loc=2, fontsize=10)
    # plt.legend(['绘图测试'], loc='upper left', markerscale = 0.5, fontsize = 10) #这个也可
    # markerscale：The relative size of legend markers compared with the originally drawn ones.
    # 15. 保存图片 savefig
    plt.savefig('network-3-30.png', dpi=200, bbox_inches='tight', transparent=False)
    # dpi: The resolution in dots per inch，设置分辨率，用于改变清晰度
    # If *True*, the axes patches will all be transparent
    # 16. 显示图片 show
    plt.show()
    
def plot_scatter_1(sc):#此函数为画karate网络图专用
    # 1. 首先是导入包，创建数据
    n = len(sc)
    sc_np = np.array(sc)#list转np
    x = list(range(1,len(sc_np)+1,1))
    y = sc_np[:,1]
    # 2.创建一张figure
    fig = plt.figure(1)
    # 3. 设置颜色 color 值【可选参数，即可填可不填】，方式有几种
    # colors = np.random.rand(n) # 随机产生10个0~1之间的颜色值，或者
    #colors = ['r', 'g', 'y', 'b', 'r', 'c', 'g', 'b', 'k', 'm']  # 可设置随机数取
    #colors = ['r', 'g', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b','b', 'b', 'b', 'b','b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b','b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b']  # 可设置随机数取
    colors = ['r', 'b', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k', 'k']  # 可设置随机数取
    # 4. 设置点的面积大小 area 值 【可选参数】
    #area = 20*np.arange(1, n+1)
    area = 70
    # 5. 设置点的边界线宽度 【可选参数】
    #widths = np.arange(n)# 0-9的数字
    widths = 0# 0-9的数字
    # 6. 正式绘制散点图：scatter
    plt.scatter(x, y, s=area, c=colors, linewidths=widths, alpha=1, marker='o')
    # 7. 设置轴标签：xlabel、ylabel
    #设置X轴标签
    plt.xlabel("N",fontsize = 18)
    #设置Y轴标签
    plt.ylabel("sc",fontsize = 18)

    #横坐标以log形式显示
    plt.xscale("log")
    
    #设置坐标轴粗细
    ax = plt.gca()
    ax.spines['bottom'].set_linewidth(2)
    ax.spines['top'].set_linewidth(2)
    ax.spines['left'].set_linewidth(2)
    ax.spines['right'].set_linewidth(2)
    
    #显示具体刻度值
    #ax.yaxis.set_major_locator(ticker.FixedLocator([0, 10, 20, 30,40,50,60]))#显示列表
    
    #刻度字体大小
    plt.tick_params(labelsize = 12)
# =============================================================================
#     # 8. 设置图标题：title
#     #plt.title('test绘图函数')
#     # 9. 设置轴的上下限显示值：xlim、ylim
#     # 设置横轴的上下限值
#     plt.xlim(-0.5, 2.5)
#     # 设置纵轴的上下限值
#     plt.ylim(-0.5, 2.5)
#     # 10. 设置轴的刻度值：xticks、yticks
#     # 设置横轴精准刻度
#     plt.xticks(np.arange(np.min(x)-0.2, np.max(x)+0.2, step=0.3))
#     # 设置纵轴精准刻度
#     plt.yticks(np.arange(np.min(y)-0.2, np.max(y)+0.2, step=0.3))
#     # 也可按照xlim和ylim来设置
#     # 设置横轴精准刻度
#     plt.xticks(np.arange(-0.5, 2.5, step=0.5))
#     # 设置纵轴精准刻度
#     plt.yticks(np.arange(-0.5, 2.5, step=0.5))
# =============================================================================
      
    # 11. 在图中某些点上（位置）显示标签：annotate
    # plt.annotate("(" + str(round(x[2], 2)) + ", " + str(round(y[2], 2)) + ")", xy=(x[2], y[2]), fontsize=10, xycoords='data')# 或者
    #plt.annotate("({0},{1})".format(round(x[2],2), round(y[2],2)), xy=(x[2], y[2]), fontsize=10, xycoords='data')
    # xycoords='data' 以data值为基准
    # 设置字体大小为 10
    # 12. 在图中某些位置显示文本：text
    #plt.text(round(x[6],2), round(y[6],2), "good point", fontdict={'size': 10, 'color': 'red'})  # fontdict设置文本字体
    plt.text(1.1, 67, "34", fontdict={'size': 12, 'color': 'red'})  # fontdict设置文本字体
    plt.text(2.2, 31, "1", fontdict={'size': 12, 'color': 'blue'})  # fontdict设置文本字体
    #plt.text(3.3, 15, "17", fontdict={'size': 12, 'color': 'green'})  # fontdict设置文本字体
    # Add text to the axes.
    # 13. 设置显示中文
    #plt.rcParams['font.sans-serif']=['SimHei'] #用来正常显示中文标签
    #plt.rcParams['axes.unicode_minus']=False #用来正常显示负号
    # 14. 设置legend，【注意，'绘图测试'：一定要是可迭代格式，例如元组或者列表，要不然只会显示第一个字符，也就是legend会显示不全】
    #plt.legend(['绘图测试'], loc=2, fontsize=10)
    # plt.legend(['绘图测试'], loc='upper left', markerscale = 0.5, fontsize = 10) #这个也可
    # markerscale：The relative size of legend markers compared with the originally drawn ones.
    # 15. 保存图片 savefig
    plt.savefig('karate.png', dpi=200, bbox_inches='tight', transparent=False)
    # dpi: The resolution in dots per inch，设置分辨率，用于改变清晰度
    # If *True*, the axes patches will all be transparent
    # 16. 显示图片 show
    plt.show()
def plot_log(sc):
    sc_np = np.array(sc)#list转np
    #print(list(range(4,len(sc_np)+1,1)))
    #print(sc_np[3:30,1])
    
# =============================================================================
#     plt.title("I'm a scatter diagram.") 
#     plt.xlim(xmax=10,xmin=0)
#     plt.ylim(ymax=18,ymin=0)
#     plt.xlabel("x")
#     plt.ylabel("y")
#     plt.plot(sc_np[:,2],sc_np[:,3],'ro')
#     plt.show()
# =============================================================================

    #plt.title("scatter diagram.")
    plt.xscale("log")
    #plt.xlim(xmax=2,xmin=0)
    #plt.ylim(ymax=80,ymin=1)
    plt.xlabel("N",fontsize = 18)
    plt.ylabel("sc",fontsize = 18)
    #plt.plot([1,2,3],[60,25,16],'ro',markersize=7)
    #plt.plot(list(range(4,len(sc_np)+1,1)),sc_np[3:30,1],'bo',markersize=7)
    plt.plot(list(range(1,len(sc_np)+1,1)),sc_np[:,1],'bo',markersize=7)
    #plt.plot(list(range(1,len(sc_np)+1,1)),sc_np[:,1],marker='o',color='b',markersize=5)
    
    #设置坐标轴粗细
    ax = plt.gca()
    ax.spines['bottom'].set_linewidth(2)
    ax.spines['top'].set_linewidth(2)
    ax.spines['left'].set_linewidth(2)
    ax.spines['right'].set_linewidth(2)
    
    #刻度字体大小
    plt.tick_params(labelsize = 12)
    
    #设置y坐标轴刻度
    #ax = plt.gca()
    #ax.yaxis.set_major_locator(ticker.FixedLocator([0, 10, 20, 30,40,50,60]))#显示列表
    
    plt.show()
def plot_2(sc):
    sc_np = np.array(sc)#list转np
    
    #plt.title("I'm a scatter diagram.") 
    #plt.xlim(xmax=10,xmin=0)
    #plt.ylim(ymax=18,ymin=0)
    plt.xlabel("x")
    plt.ylabel("y")
    plt.plot(sc_np[:,2],sc_np[:,3],'ro')
    #plt.show()
# =============================================================================
#     
#     #plt.title("scatter diagram.")
#     #plt.xscale("log")
#     #plt.xlim(xmax=2,xmin=0)
#     #plt.ylim(ymax=50,ymin=0)
#     plt.xlabel("N",fontsize = 18)
#     plt.ylabel("sc",fontsize = 18)
#     plt.plot(list(range(1,len(sc_np)+1,1)),sc_np[:,1],'bo',linewidth=5)
# =============================================================================
    
    #设置坐标轴粗细
    ax = plt.gca()
    ax.spines['bottom'].set_linewidth(2)
    ax.spines['top'].set_linewidth(2)
    ax.spines['left'].set_linewidth(2)
    ax.spines['right'].set_linewidth(2)
    
    #刻度字体大小
    plt.tick_params(labelsize = 12)
    
    plt.show()
    
if __name__ == "__main__":
    #kartet
    sc1 =  [(34, 68, 4, 17), (1, 32, 2, 16), (33, 12, 1, 12), (3, 10, 1, 10), (2, 9, 1, 9), (32, 6, 1, 6), (4, 6, 1, 6), (9, 5, 1, 5), (14, 5, 1, 5), (24, 5, 1, 5), (31, 4, 1, 4), (30, 4, 1, 4), (6, 4, 1, 4), (28, 4, 1, 4), (7, 4, 1, 4), (8, 4, 1, 4), (5, 3, 1, 3), (29, 3, 1, 3), (11, 3, 1, 3), (26, 3, 1, 3), (25, 3, 1, 3), (20, 3, 1, 3), (27, 2, 1, 2), (10, 2, 1, 2), (13, 2, 1, 2), (15, 2, 1, 2), (18, 2, 1, 2), (16, 2, 1, 2), (17, 2, 1, 2), (19, 2, 1, 2), (21, 2, 1, 2), (22, 2, 1, 2), (23, 2, 1, 2), (12, 1, 1, 1)]
    #football
    sc_football = [(67, 48, 4, 12), (3, 24, 2, 12), (7, 24, 2, 12), (91, 22, 2, 11), (43, 22, 2, 11), (17, 22, 2, 11), (104, 14, 1, 12), (53, 14, 1, 12), (5, 14, 1, 12), (2, 14, 1, 12), (88, 14, 1, 12), (0, 14, 1, 12), (15, 14, 1, 12), (1, 14, 1, 12), (6, 14, 1, 12), (109, 11, 1, 11), (55, 11, 1, 11), (106, 11, 1, 11), (83, 11, 1, 11), (47, 11, 1, 11), (35, 11, 1, 11), (37, 11, 1, 11), (66, 11, 1, 11), (80, 11, 1, 11), (68, 11, 1, 11), (86, 11, 1, 11), (45, 11, 1, 11), (60, 11, 1, 11), (111, 11, 1, 11), (82, 11, 1, 11), (70, 11, 1, 11), (34, 11, 1, 11), (61, 11, 1, 11), (81, 11, 1, 11), (4, 11, 1, 11), (44, 11, 1, 11), (32, 11, 1, 11), (20, 11, 1, 11), (46, 11, 1, 11), (76, 11, 1, 11), (114, 11, 1, 11), (110, 11, 1, 11), (23, 11, 1, 11), (22, 11, 1, 11), (18, 11, 1, 11), (27, 11, 1, 11), (31, 11, 1, 11), (65, 11, 1, 11), (84, 11, 1, 11), (30, 11, 1, 11), (87, 11, 1, 11), (25, 11, 1, 11), (13, 11, 1, 11), (69, 11, 1, 11), (77, 11, 1, 11), (98, 11, 1, 11), (51, 11, 1, 11), (49, 11, 1, 11), (78, 11, 1, 11), (72, 11, 1, 11), (39, 11, 1, 11), (62, 11, 1, 11), (16, 11, 1, 11), (40, 11, 1, 11), (73, 11, 1, 11), (8, 11, 1, 11), (29, 11, 1, 11), (89, 11, 1, 11), (64, 11, 1, 11), (100, 11, 1, 11), (9, 11, 1, 11), (79, 11, 1, 11), (92, 11, 1, 11), (19, 11, 1, 11), (38, 11, 1, 11), (74, 11, 1, 11), (21, 11, 1, 11), (48, 11, 1, 11), (107, 10, 1, 10), (56, 10, 1, 10), (41, 10, 1, 10), (108, 10, 1, 10), (52, 10, 1, 10), (26, 10, 1, 10), (96, 10, 1, 10), (95, 10, 1, 10), (101, 10, 1, 10), (71, 10, 1, 10), (75, 10, 1, 10), (103, 10, 1, 10), (24, 10, 1, 10), (58, 10, 1, 10), (94, 10, 1, 10), (105, 10, 1, 10), (112, 10, 1, 10), (99, 10, 1, 10), (102, 10, 1, 10), (57, 10, 1, 10), (12, 10, 1, 10), (33, 10, 1, 10), (54, 10, 1, 10), (11, 10, 1, 10), (113, 10, 1, 10), (93, 10, 1, 10), (10, 10, 1, 10), (14, 10, 1, 10), (50, 9, 1, 9), (90, 9, 1, 9), (63, 9, 1, 9), (85, 9, 1, 9), (28, 9, 1, 9), (97, 8, 1, 8), (59, 8, 1, 8), (36, 8, 1, 8), (42, 7, 1, 7)]#football sc矩阵
    
    #polbooks
    sc_polbooks = [(12, 125, 5, 25), (84, 92, 4, 23), (8, 35, 1, 25), (3, 23, 1, 23), (72, 22, 1, 22), (66, 21, 1, 21), (73, 21, 1, 21), (30, 20, 1, 20), (47, 18, 1, 18), (11, 18, 1, 18), (40, 18, 1, 18), (74, 16, 1, 16), (75, 16, 1, 16), (9, 16, 1, 16), (71, 15, 1, 15), (10, 15, 1, 15), (86, 14, 1, 14), (58, 13, 1, 13), (76, 13, 1, 13), (13, 13, 1, 13), (99, 12, 1, 12), (100, 12, 1, 12), (6, 11, 1, 11), (31, 11, 1, 11), (35, 10, 1, 10), (20, 10, 1, 10), (82, 9, 1, 9), (26, 9, 1, 9), (14, 9, 1, 9), (24, 9, 1, 9), (23, 9, 1, 9), (27, 9, 1, 9), (33, 9, 1, 9), (64, 9, 1, 9), (41, 8, 1, 8), (79, 8, 1, 8), (83, 8, 1, 8), (39, 8, 1, 8), (4, 8, 1, 8), (7, 8, 1, 8), (91, 8, 1, 8), (49, 8, 1, 8), (38, 7, 1, 7), (94, 7, 1, 7), (70, 7, 1, 7), (37, 7, 1, 7), (5, 7, 1, 7), (22, 7, 1, 7), (65, 7, 1, 7), (77, 7, 1, 7), (93, 7, 1, 7), (42, 6, 1, 6), (60, 6, 1, 6), (45, 6, 1, 6), (97, 6, 1, 6), (96, 6, 1, 6), (67, 6, 1, 6), (51, 6, 1, 6), (62, 6, 1, 6), (54, 6, 1, 6), (0, 6, 1, 6), (89, 6, 1, 6), (85, 5, 1, 5), (43, 5, 1, 5), (19, 5, 1, 5), (52, 5, 1, 5), (87, 5, 1, 5), (21, 5, 1, 5), (59, 5, 1, 5), (34, 5, 1, 5), (98, 5, 1, 5), (44, 5, 1, 5), (32, 5, 1, 5), (53, 5, 1, 5), (17, 5, 1, 5), (101, 5, 1, 5), (90, 5, 1, 5), (57, 5, 1, 5), (25, 5, 1, 5), (69, 5, 1, 5), (78, 5, 1, 5), (88, 5, 1, 5), (36, 5, 1, 5), (15, 5, 1, 5), (48, 4, 1, 4), (80, 4, 1, 4), (2, 4, 1, 4), (1, 4, 1, 4), (68, 4, 1, 4), (95, 4, 1, 4), (56, 4, 1, 4), (63, 4, 1, 4), (55, 4, 1, 4), (46, 4, 1, 4), (61, 4, 1, 4), (81, 4, 1, 4), (102, 4, 1, 4), (29, 4, 1, 4), (50, 3, 1, 3), (104, 3, 1, 3), (18, 3, 1, 3), (92, 3, 1, 3), (16, 3, 1, 3), (28, 3, 1, 3), (103, 2, 1, 2)]
    #polblogs只计算前200个点的sc
    sc_polblogs = [(126, 1700, 5, 351), (837, 662, 2, 306), (671, 550, 2, 301), (47, 277, 1, 277), (496, 274, 1, 274), (767, 243, 1, 243), (1005, 223, 1, 223), (565, 218, 1, 218), (921, 211, 1, 211), (1177, 199, 1, 199), (889, 196, 1, 196), (829, 182, 1, 182), (1212, 179, 1, 179), (282, 171, 1, 171), (881, 170, 1, 170), (252, 170, 1, 170), (357, 149, 1, 149), (146, 147, 1, 147), (497, 147, 1, 147), (383, 144, 1, 144), (618, 143, 1, 143), (1198, 138, 1, 138), (945, 138, 1, 138), (300, 138, 1, 138), (401, 137, 1, 137), (339, 136, 1, 136), (83, 133, 1, 133), (583, 133, 1, 133), (118, 130, 1, 130), (693, 129, 1, 129), (153, 128, 1, 128), (691, 128, 1, 128), (417, 128, 1, 128), (575, 125, 1, 125), (798, 123, 1, 123), (974, 123, 1, 123), (375, 122, 1, 122), (1058, 122, 1, 122), (499, 121, 1, 121), (1029, 120, 1, 120), (59, 118, 1, 118), (427, 117, 1, 117), (122, 117, 1, 117), (1199, 116, 1, 116), (1078, 114, 1, 114), (588, 112, 1, 112), (232, 111, 1, 111), (411, 111, 1, 111), (516, 110, 1, 110), (672, 108, 1, 108), (646, 107, 1, 107), (1127, 105, 1, 105), (782, 104, 1, 104), (741, 104, 1, 104), (534, 104, 1, 104), (728, 104, 1, 104), (403, 103, 1, 103), (382, 102, 1, 102), (581, 102, 1, 102), (956, 101, 1, 101), (61, 99, 1, 99), (100, 98, 1, 98), (162, 98, 1, 98), (36, 97, 1, 97), (638, 97, 1, 97), (1067, 97, 1, 97), (519, 96, 1, 96), (1211, 96, 1, 96), (326, 96, 1, 96), (705, 95, 1, 95), (480, 94, 1, 94), (563, 93, 1, 93), (138, 93, 1, 93), (99, 93, 1, 93), (841, 92, 1, 92), (835, 92, 1, 92), (316, 92, 1, 92), (747, 91, 1, 91), (605, 91, 1, 91), (654, 90, 1, 90), (909, 89, 1, 89), (988, 89, 1, 89), (713, 88, 1, 88), (445, 88, 1, 88), (48, 88, 1, 88), (140, 87, 1, 87), (20, 87, 1, 87), (1167, 87, 1, 87), (470, 86, 1, 86), (995, 86, 1, 86), (364, 86, 1, 86), (950, 86, 1, 86), (444, 85, 1, 85), (832, 85, 1, 85), (477, 84, 1, 84), (169, 83, 1, 83), (761, 82, 1, 82), (796, 82, 1, 82), (358, 82, 1, 82), (236, 81, 1, 81), (790, 81, 1, 81), (125, 80, 1, 80), (385, 80, 1, 80), (461, 80, 1, 80), (440, 79, 1, 79), (155, 79, 1, 79), (421, 79, 1, 79), (224, 79, 1, 79), (337, 79, 1, 79), (523, 79, 1, 79), (1035, 78, 1, 78), (599, 78, 1, 78), (742, 78, 1, 78), (932, 77, 1, 77), (994, 77, 1, 77), (1006, 76, 1, 76), (380, 76, 1, 76), (591, 75, 1, 75), (847, 75, 1, 75), (630, 75, 1, 75), (781, 75, 1, 75), (524, 74, 1, 74), (363, 74, 1, 74), (307, 73, 1, 73), (441, 73, 1, 73), (698, 72, 1, 72), (1074, 72, 1, 72), (379, 72, 1, 72), (448, 71, 1, 71), (758, 71, 1, 71), (1149, 71, 1, 71), (474, 71, 1, 71), (485, 71, 1, 71), (980, 71, 1, 71), (805, 71, 1, 71), (920, 70, 1, 70), (442, 70, 1, 70), (1077, 70, 1, 70), (345, 70, 1, 70), (597, 70, 1, 70), (302, 70, 1, 70), (492, 69, 1, 69), (940, 69, 1, 69), (71, 69, 1, 69), (268, 69, 1, 69), (176, 68, 1, 68), (505, 68, 1, 68), (456, 68, 1, 68), (943, 68, 1, 68), (1169, 68, 1, 68), (11, 68, 1, 68), (770, 67, 1, 67), (42, 67, 1, 67), (906, 67, 1, 67), (644, 66, 1, 66), (371, 66, 1, 66), (1196, 66, 1, 66), (1009, 65, 1, 65), (1170, 65, 1, 65), (86, 65, 1, 65), (27, 64, 1, 64), (1076, 64, 1, 64), (365, 64, 1, 64), (438, 64, 1, 64), (919, 64, 1, 64), (987, 63, 1, 63), (863, 63, 1, 63), (887, 63, 1, 63), (96, 62, 1, 62), (216, 62, 1, 62), (85, 62, 1, 62), (542, 62, 1, 62), (75, 61, 1, 61), (12, 61, 1, 61), (896, 60, 1, 60), (31, 59, 1, 59), (181, 59, 1, 59), (775, 59, 1, 59), (590, 59, 1, 59), (552, 59, 1, 59), (765, 59, 1, 59), (1106, 59, 1, 59), (373, 58, 1, 58), (783, 58, 1, 58), (10, 57, 1, 57), (757, 56, 1, 56), (177, 56, 1, 56), (982, 56, 1, 56), (472, 56, 1, 56), (998, 56, 1, 56), (1151, 56, 1, 56), (734, 56, 1, 56), (186, 56, 1, 56), (668, 55, 1, 55), (21, 55, 1, 55), (452, 55, 1, 55), (204, 55, 1, 55), (771, 54, 1, 54), (952, 54, 1, 54), (564, 54, 1, 54)]
    #network-3-30
    sc5 =  [(1, 60, 6, 10), (8, 25, 4, 6), (17, 16, 3, 5), (21, 8.5, 2, 5), (4, 4.5, 1, 4), (5, 4.5, 1, 4), (7, 3.5, 1, 3), (10, 3.5, 1, 3), (13, 3.5, 1, 3), (14, 3, 1, 3), (15, 3.5, 1, 3), (22, 3.5, 1, 3), (23, 3.5, 1, 3), (24, 3.5, 1, 3), (2, 2, 1, 2), (3, 2, 1, 2), (6, 2, 1, 2), (9, 2, 1, 2), (12, 2, 1, 2), (16, 2, 1, 2), (19, 2, 1, 2), (20, 2, 1, 2), (25, 2, 1, 2), (28, 2, 1, 2), (11, 1, 1, 1), (18, 1, 1, 1), (26, 1, 1, 1), (27, 1, 1, 1), (29, 1, 1, 1), (30, 1, 1, 1)]
    sc5_1 =  [(1, 60, 6, 10), (8, 25, 4, 6), (17, 16, 3, 5)]
    sc5_2 =  [(21, 8.5, 2, 5), (4, 4.5, 1, 4), (5, 4.5, 1, 4), (7, 3.5, 1, 3), (10, 3.5, 1, 3), (13, 3.5, 1, 3), (14, 3, 1, 3), (15, 3.5, 1, 3), (22, 3.5, 1, 3), (23, 3.5, 1, 3), (24, 3.5, 1, 3), (2, 2, 1, 2), (3, 2, 1, 2), (6, 2, 1, 2), (9, 2, 1, 2), (12, 2, 1, 2), (16, 2, 1, 2), (19, 2, 1, 2), (20, 2, 1, 2), (25, 2, 1, 2), (28, 2, 1, 2), (11, 1, 1, 1), (18, 1, 1, 1), (26, 1, 1, 1), (27, 1, 1, 1), (29, 1, 1, 1), (30, 1, 1, 1)]
    #plot_log(sc5)
    #plot_2(sc3)
    sc_dolphins = [(14, 72, 6, 12), (17, 27, 3, 9), (20, 18, 2, 9), (37, 11, 1, 11), (45, 11, 1, 11), (51, 10, 1, 10), (33, 10, 1, 10), (57, 9, 1, 9), (29, 9, 1, 9), (1, 8, 1, 8), (38, 8, 1, 8), (13, 8, 1, 8), (40, 8, 1, 8), (18, 7, 1, 7), (43, 7, 1, 7), (50, 7, 1, 7), (54, 7, 1, 7), (15, 7, 1, 7), (36, 7, 1, 7), (9, 7, 1, 7), (6, 6, 1, 6), (21, 6, 1, 6), (47, 6, 1, 6), (24, 6, 1, 6), (16, 6, 1, 6), (42, 6, 1, 6), (8, 6, 1, 6), (0, 6, 1, 6), (41, 5, 1, 5), (27, 5, 1, 5), (7, 5, 1, 5), (59, 5, 1, 5), (10, 5, 1, 5), (30, 5, 1, 5), (34, 5, 1, 5), (28, 5, 1, 5), (2, 4, 1, 4), (19, 4, 1, 4), (44, 4, 1, 4), (52, 4, 1, 4), (5, 4, 1, 4), (3, 3, 1, 3), (26, 3, 1, 3), (23, 3, 1, 3), (32, 3, 1, 3), (61, 3, 1, 3), (25, 3, 1, 3), (53, 2, 1, 2), (39, 2, 1, 2), (46, 2, 1, 2), (56, 2, 1, 2), (55, 2, 1, 2), (49, 2, 1, 2), (31, 1, 1, 1), (35, 1, 1, 1), (4, 1, 1, 1), (12, 1, 1, 1), (22, 1, 1, 1), (11, 1, 1, 1), (60, 1, 1, 1), (58, 1, 1, 1), (48, 1, 1, 1)]
    
    #cora只计算前200个点的sc
    sc_cora = [(35, 350, 12, 168), (6213, 156, 2, 78), (1365, 148, 2, 74), (3229, 130, 2, 65), (910, 88, 2, 44), (114, 84, 2, 42), (4330, 82, 2, 40), (3231, 70, 2, 36), (12182, 69, 3, 23), (20193, 69, 3, 23), (1272, 68, 2, 34), (19621, 66, 2, 33), (2440, 62, 2, 31), (2665, 60, 2, 30), (24966, 58, 2, 29), (8224, 52, 2, 26), (643221, 48, 3, 16), (12350, 42, 2, 21), (34257, 42, 3, 14), (31353, 38, 2, 19), (8703, 38, 2, 19), (39890, 38, 2, 19), (2653, 36, 2, 18), (65074, 36, 3, 12), (2696, 34, 2, 17), (4584, 32, 1, 32), (6214, 32, 1, 32), (1481, 32, 2, 16), (4335, 32, 2, 16), (887, 30, 1, 30), (3218, 30, 2, 15), (6910, 26, 2, 13), (18777, 26, 2, 13), (2654, 26, 2, 13), (3243, 24, 2, 12), (56115, 24, 2, 12), (3233, 24, 2, 12), (46491, 24, 2, 12), (31489, 24, 2, 12), (82920, 23, 1, 23), (12576, 22, 1, 22), (6209, 22, 2, 11), (14062, 22, 2, 11), (57119, 22, 2, 11), (10169, 21, 1, 21), (22563, 21, 1, 21), (40151, 20, 2, 10), (153063, 20, 2, 10), (1959, 20, 2, 10), (12330, 20, 2, 10), (240321, 20, 2, 10), (77438, 20, 2, 10), (6818, 20, 2, 10), (73162, 20, 2, 10), (6935, 20, 2, 10), (15429, 19, 1, 19), (2658, 19, 1, 19), (3220, 18, 1, 18), (230879, 18, 1, 18), (6741, 18, 2, 9), (11335, 18, 2, 9), (205196, 18, 2, 9), (6814, 18, 2, 9), (5064, 18, 2, 9), (10796, 17, 1, 17), (4804, 17, 1, 17), (1688, 17, 1, 17), (85352, 17, 1, 17), (3191, 17, 1, 17), (23738, 17, 1, 17), (117, 17, 1, 17), (210871, 16, 1, 16), (35922, 16, 1, 16), (6334, 16, 1, 16), (39127, 16, 1, 16), (20584, 16, 2, 8), (5966, 16, 2, 8), (16485, 16, 2, 8), (22386, 16, 2, 8), (35061, 15, 1, 15), (5348, 15, 1, 15), (10177, 15, 1, 15), (54129, 15, 1, 15), (54131, 15, 1, 15), (16819, 14, 1, 14), (38205, 14, 1, 14), (28350, 14, 1, 14), (35797, 14, 1, 14), (642894, 14, 1, 14), (89547, 13, 1, 13), (17476, 13, 1, 13), (5086, 12, 1, 12), (287787, 12, 1, 12), (41714, 12, 1, 12), (6184, 12, 1, 12), (28287, 12, 1, 12), (108047, 12, 1, 12), (20601, 12, 1, 12), (6163, 12, 1, 12), (1956, 12, 1, 12), (22229, 12, 1, 12), (6913, 12, 1, 12), (36140, 12, 1, 12), (10531, 11, 1, 11), (6151, 11, 1, 11), (10798, 11, 1, 11), (45605, 11, 1, 11), (10183, 11, 1, 11), (16008, 11, 1, 11), (503883, 11, 1, 11), (84021, 11, 1, 11), (79809, 11, 1, 11), (103515, 11, 1, 11), (202639, 11, 1, 11), (32083, 10, 1, 10), (20534, 10, 1, 10), (30895, 10, 1, 10), (7419, 10, 1, 10), (575077, 10, 1, 10), (6125, 10, 1, 10), (67415, 10, 1, 10), (123825, 10, 1, 10), (77758, 10, 1, 10), (27627, 10, 1, 10), (45189, 10, 1, 10), (112378, 10, 1, 10), (20602, 10, 1, 10), (8875, 10, 1, 10), (3192, 10, 1, 10), (1997, 10, 1, 10), (12195, 10, 1, 10), (66990, 9, 1, 9), (23507, 9, 1, 9), (6767, 9, 1, 9), (1717, 9, 1, 9), (6196, 9, 1, 9), (17208, 9, 1, 9), (12210, 9, 1, 9), (23116, 9, 1, 9), (28957, 9, 1, 9), (578337, 9, 1, 9), (56119, 9, 1, 9), (65650, 9, 1, 9), (25702, 9, 1, 9), (3085, 9, 1, 9), (578646, 9, 1, 9), (4649, 9, 1, 9), (33907, 9, 1, 9), (28254, 9, 1, 9), (27623, 9, 1, 9), (6923, 9, 1, 9), (4329, 8, 1, 8), (59798, 8, 1, 8), (124064, 8, 1, 8), (63486, 8, 1, 8), (12631, 8, 1, 8), (12638, 8, 1, 8), (8872, 8, 1, 8), (2354, 8, 1, 8), (714289, 8, 1, 8), (3828, 8, 1, 8), (29492, 8, 1, 8), (23070, 8, 1, 8), (15889, 8, 1, 8), (128, 8, 1, 8), (6220, 8, 1, 8), (22431, 8, 1, 8), (73327, 8, 1, 8), (23258, 8, 1, 8), (8594, 0, 0, 8), (56709, 0, 0, 8), (134128, 0, 0, 8), (56112, 0, 0, 8), (56167, 0, 0, 8), (10435, 0, 0, 8), (38722, 0, 0, 8), (8079, 0, 0, 8), (25772, 0, 0, 8), (8865, 0, 0, 8), (3097, 0, 0, 8), (127033, 0, 0, 8), (54132, 0, 0, 8), (6784, 0, 0, 8), (3112, 0, 0, 8), (66556, 0, 0, 8), (49843, 0, 0, 8), (25181, 0, 0, 8), (12198, 0, 0, 8), (6130, 0, 0, 8), (33231, 0, 0, 8), (154982, 0, 0, 8), (14429, 0, 0, 8), (936, 0, 0, 8), (28290, 0, 0, 8), (6385, 0, 0, 8), (141342, 0, 0, 8), (579008, 0, 0, 8), (78557, 0, 0, 8), (87417, 0, 0, 8), (33818, 0, 0, 8)]
    
    #citeseer
    sc_citeseer =  [(390, 350, 19, 99), (847, 206, 6, 51), (1406, 105, 5, 21), (439, 80, 2, 35), (868, 75, 5, 13), (699, 70, 2, 30), (471, 58, 2, 29), (291, 56, 2, 28), (1918, 51, 3, 17), (1236, 48, 3, 16), (643, 46, 2, 23), (354, 44, 4, 11), (616, 42, 2, 21), (364, 34, 1, 34), (488, 32, 2, 16), (631, 32, 2, 16), (659, 32, 2, 16), (263, 30, 2, 15), (822, 30, 2, 15), (2049, 28, 2, 14), (697, 27, 1, 27), (828, 24, 2, 12), (905, 23, 1, 23), (661, 22, 1, 22), (0, 22, 2, 11), (416, 22, 2, 11), (753, 22, 2, 11), (698, 20, 1, 20), (483, 19, 1, 19), (732, 19, 1, 19), (516, 18, 1, 18), (780, 18, 1, 18), (522, 17, 1, 17), (748, 17, 1, 17), (1731, 17, 1, 17), (31, 16, 1, 16), (51, 16, 1, 16), (986, 16, 1, 16), (106, 15, 1, 15), (422, 15, 1, 15), (673, 15, 1, 15), (714, 15, 1, 15), (814, 15, 1, 15), (999, 15, 1, 15), (1004, 15, 1, 15), (28, 14, 1, 14), (685, 14, 1, 14), (54, 13, 1, 13), (184, 13, 1, 13), (1000, 13, 1, 13), (105, 12, 1, 12), (179, 12, 1, 12), (275, 12, 1, 12), (276, 12, 1, 12), (338, 12, 1, 12), (355, 12, 1, 12), (441, 12, 1, 12), (481, 12, 1, 12), (668, 12, 1, 12), (686, 12, 1, 12), (747, 12, 1, 12), (769, 12, 1, 12), (799, 12, 1, 12), (876, 12, 1, 12), (979, 12, 1, 12), (2050, 12, 1, 12), (69, 11, 1, 11), (86, 11, 1, 11), (180, 11, 1, 11), (297, 11, 1, 11), (495, 11, 1, 11), (608, 11, 1, 11), (619, 11, 1, 11), (691, 11, 1, 11), (779, 11, 1, 11), (802, 11, 1, 11), (848, 11, 1, 11), (887, 11, 1, 11), (916, 11, 1, 11), (1657, 11, 1, 11), (2955, 0, 0, 11), (22, 0, 0, 10), (30, 0, 0, 10), (40, 0, 0, 10), (67, 0, 0, 10), (79, 0, 0, 10), (88, 0, 0, 10), (153, 0, 0, 10), (202, 0, 0, 10), (218, 0, 0, 10), (251, 0, 0, 10), (272, 0, 0, 10), (295, 0, 0, 10), (326, 0, 0, 10), (429, 0, 0, 10), (447, 0, 0, 10), (460, 0, 0, 10), (573, 0, 0, 10), (646, 0, 0, 10), (655, 0, 0, 10), (745, 0, 0, 10), (746, 0, 0, 10), (804, 0, 0, 10), (862, 0, 0, 10), (917, 0, 0, 10), (987, 0, 0, 10), (1150, 0, 0, 10), (1374, 0, 0, 10), (1460, 0, 0, 10), (1921, 0, 0, 10), (1980, 0, 0, 10), (57, 0, 0, 9), (262, 0, 0, 9), (266, 0, 0, 9), (278, 0, 0, 9), (285, 0, 0, 9), (356, 0, 0, 9), (373, 0, 0, 9), (389, 0, 0, 9), (418, 0, 0, 9), (445, 0, 0, 9), (502, 0, 0, 9), (547, 0, 0, 9), (572, 0, 0, 9), (592, 0, 0, 9), (855, 0, 0, 9), (956, 0, 0, 9), (998, 0, 0, 9), (1101, 0, 0, 9), (1500, 0, 0, 9), (1509, 0, 0, 9), (1634, 0, 0, 9), (1747, 0, 0, 9), (2006, 0, 0, 9), (2024, 0, 0, 9), (34, 0, 0, 8), (37, 0, 0, 8), (167, 0, 0, 8), (265, 0, 0, 8), (302, 0, 0, 8), (329, 0, 0, 8), (372, 0, 0, 8), (410, 0, 0, 8), (444, 0, 0, 8), (469, 0, 0, 8), (505, 0, 0, 8), (506, 0, 0, 8), (517, 0, 0, 8), (574, 0, 0, 8), (597, 0, 0, 8), (615, 0, 0, 8), (680, 0, 0, 8), (772, 0, 0, 8), (805, 0, 0, 8), (935, 0, 0, 8), (980, 0, 0, 8), (1005, 0, 0, 8), (1045, 0, 0, 8), (1083, 0, 0, 8), (1168, 0, 0, 8), (1314, 0, 0, 8), (1470, 0, 0, 8), (1528, 0, 0, 8), (1736, 0, 0, 8), (1801, 0, 0, 8), (1850, 0, 0, 8), (2112, 0, 0, 8), (2460, 0, 0, 8), (25, 0, 0, 7), (58, 0, 0, 7), (63, 0, 0, 7), (94, 0, 0, 7), (144, 0, 0, 7), (146, 0, 0, 7), (149, 0, 0, 7), (230, 0, 0, 7), (310, 0, 0, 7), (404, 0, 0, 7), (438, 0, 0, 7), (462, 0, 0, 7), (482, 0, 0, 7), (554, 0, 0, 7), (566, 0, 0, 7), (569, 0, 0, 7), (612, 0, 0, 7), (634, 0, 0, 7), (637, 0, 0, 7), (663, 0, 0, 7), (687, 0, 0, 7), (701, 0, 0, 7), (704, 0, 0, 7), (706, 0, 0, 7), (708, 0, 0, 7), (723, 0, 0, 7), (763, 0, 0, 7), (788, 0, 0, 7), (810, 0, 0, 7), (888, 0, 0, 7), (896, 0, 0, 7), (926, 0, 0, 7)]
    
    #pubmed只计算前200个点
    sc_pubmed =  [(9742976, 700, 11, 171), (18776148, 385, 3, 125), (8366922, 328, 2, 154), (17349009, 244, 3, 88), (16215165, 229, 3, 83), (18664617, 212, 2, 121), (3309126, 160, 2, 80), (19364331, 154, 2, 77), (17349010, 146, 2, 73), (8012723, 138, 3, 46), (11832527, 131, 1, 131), (19479186, 130, 1, 130), (18628530, 124, 2, 62), (3899825, 124, 2, 62), (18292465, 120, 2, 60), (14551916, 116, 2, 58), (16757574, 112, 2, 56), (16344294, 110, 2, 55), (11781358, 106, 2, 53), (18283633, 100, 2, 50), (18769687, 80, 2, 40), (19742300, 80, 2, 40), (18436707, 80, 2, 40), (19114721, 78, 2, 39), (1884094, 78, 2, 39), (18561508, 77, 1, 77), (12560454, 75, 1, 75), (10938048, 75, 1, 75), (3309680, 74, 1, 74), (19436665, 74, 1, 74), (11333990, 74, 1, 74), (9732337, 73, 1, 73), (3057885, 72, 1, 72), (8775937, 72, 1, 72), (19509199, 72, 2, 36), (17186387, 72, 2, 36), (8083360, 72, 2, 36), (17463246, 69, 1, 69), (18078023, 68, 1, 68), (19228405, 67, 1, 67), (11303130, 67, 1, 67), (18423879, 67, 1, 67), (1697648, 66, 1, 66), (8637860, 66, 1, 66), (8232539, 64, 1, 64), (19956106, 63, 1, 63), (9294791, 61, 1, 61), (10848492, 61, 1, 61), (17293876, 60, 1, 60), (18782870, 59, 1, 59), (16847277, 59, 1, 59), (16371630, 59, 1, 59), (7694152, 59, 1, 59), (18729180, 58, 1, 58), (17463248, 58, 1, 58), (17463249, 58, 1, 58), (9892615, 57, 1, 57), (9096977, 57, 1, 57), (9362527, 57, 1, 57), (18493227, 56, 1, 56), (18437223, 56, 1, 56), (7567975, 55, 1, 55), (8900244, 55, 1, 55), (18178393, 54, 1, 54), (8551245, 54, 1, 54), (17594390, 53, 1, 53), (8402882, 53, 1, 53), (19054720, 52, 1, 52), (9742977, 52, 1, 52), (11507694, 52, 1, 52), (17955068, 52, 1, 52), (3003909, 51, 1, 51), (10491414, 51, 1, 51), (19046214, 51, 1, 51), (3525284, 51, 1, 51), (8072542, 50, 1, 50), (11598829, 50, 1, 50), (11484155, 50, 1, 50), (12851856, 50, 1, 50), (19890425, 50, 1, 50), (8408615, 50, 1, 50), (3275717, 49, 1, 49), (15655244, 49, 1, 49), (18215172, 48, 1, 48), (12832613, 48, 1, 48), (17559889, 48, 1, 48), (17969365, 47, 1, 47), (18827867, 47, 1, 47), (16415884, 47, 1, 47), (17969380, 47, 1, 47), (17306374, 47, 1, 47), (15537844, 46, 1, 46), (8317480, 46, 1, 46), (17554260, 46, 1, 46), (16823478, 46, 1, 46), (15931309, 46, 1, 46), (18200800, 46, 1, 46), (10189543, 46, 1, 46), (8350054, 46, 1, 46), (18048763, 46, 1, 46), (19900993, 45, 1, 45), (8529129, 45, 1, 45), (17697384, 45, 1, 45), (10378067, 45, 1, 45), (11285306, 45, 1, 45), (18654634, 45, 1, 45), (18561513, 45, 1, 45), (11546824, 44, 1, 44), (6362005, 44, 1, 44), (15467836, 44, 1, 44), (8415742, 44, 1, 44), (9727063, 44, 1, 44), (19956109, 43, 1, 43), (10973253, 42, 1, 42), (11742409, 42, 1, 42), (19114173, 42, 1, 42), (3159965, 42, 1, 42), (19065993, 42, 1, 42), (2882518, 42, 1, 42), (18450419, 42, 1, 42), (17671651, 42, 1, 42), (7964456, 42, 1, 42), (3585250, 42, 1, 42), (8447318, 41, 1, 41), (10795741, 41, 1, 41), (7761837, 41, 1, 41), (3554759, 41, 1, 41), (9758619, 41, 1, 41), (14755342, 41, 1, 41), (19475778, 41, 1, 41), (7545875, 41, 1, 41), (16109069, 41, 1, 41), (15889095, 41, 1, 41), (16339897, 41, 1, 41), (8227346, 41, 1, 41), (18200811, 40, 1, 40), (20011163, 40, 1, 40), (10677521, 40, 1, 40), (7962558, 40, 1, 40), (9449718, 40, 1, 40), (9673301, 40, 1, 40), (12975475, 40, 1, 40), (10938049, 40, 1, 40), (8012717, 40, 1, 40), (9435304, 39, 1, 39), (18372903, 39, 1, 39), (1469084, 39, 1, 39), (1901764, 39, 1, 39), (9707599, 39, 1, 39), (18561511, 39, 1, 39), (18045485, 39, 1, 39), (18556337, 39, 1, 39), (16855264, 38, 1, 38), (17210729, 38, 1, 38), (1370298, 38, 1, 38), (18971435, 38, 1, 38), (18314421, 38, 1, 38), (16628253, 38, 1, 38), (8894169, 38, 1, 38), (14623908, 38, 1, 38), (18596953, 38, 1, 38), (1409662, 38, 1, 38), (18854049, 38, 1, 38), (8719804, 37, 1, 37), (10594551, 37, 1, 37), (12414951, 37, 1, 37), (18776136, 37, 1, 37), (10793009, 37, 1, 37), (1532777, 37, 1, 37), (17460697, 37, 1, 37), (12082183, 37, 1, 37), (2510155, 37, 1, 37), (8981961, 37, 1, 37), (2523954, 37, 1, 37), (7034532, 37, 1, 37), (18448419, 37, 1, 37), (10053014, 37, 1, 37), (9770521, 37, 1, 37), (7769140, 36, 1, 36), (8315397, 36, 1, 36), (9314555, 36, 1, 36), (6363172, 36, 1, 36), (19011169, 36, 1, 36), (18358785, 36, 1, 36), (11067779, 36, 1, 36), (1422588, 36, 1, 36), (11032783, 36, 1, 36), (12556541, 36, 1, 36), (17307546, 36, 1, 36), (15467822, 36, 1, 36), (17969381, 36, 1, 36), (9314549, 36, 1, 36), (15184500, 36, 1, 36), (16030147, 36, 1, 36), (10090898, 36, 1, 36), (7561695, 35, 1, 35), (2205920, 35, 1, 35), (1675432, 35, 1, 35), (8570667, 35, 1, 35), (9421470, 35, 1, 35)]
    #plot_scatter(sc5)
    #plot_scatter_1(sc1)
    plot_log(sc_pubmed)
    #print(sc_dolphins[0:3])